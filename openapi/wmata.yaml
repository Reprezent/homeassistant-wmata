openapi: '3.0.3'
info:
  title: Washington Metropolitan Area Transit Authority API
  version: '1.0.0'
servers:
  - url: https://api.wmata.com

components:
  schemas:
    StationCode:
      type: string
      nullable: true
    LineCode:
      type: string
      nullable: true
      enum:
        - ""
        - "RD"
        - "BL"
        - "YL"
        - "OR"
        - "GR"
        - "SV"
        - "No"
    NextTrains:
      type: object
      properties:
        Trains:
          type: array
          items:
            type: object
            properties:
              Car:
                type: string
                nullable: true
              Destination:
                type: string
              DestinationCode:
                $ref: "#/components/schemas/StationCode"
              DestinationName:
                type: string
                nullable: true
              Group:
                type: string
              Line:
                $ref: "#/components/schemas/LineCode"
              LocationCode:
                type: string
              Min:
                type: string
    LiveTrainPositions:
      type: object
      properties:
        TrainPositions:
          type: array
          items:
            type: object
            properties:
              CarCount:
                type: number
              CircuitId:
                type: number
              DestinationStationCode:
                $ref: "#/components/schemas/StationCode"
              DirectionNum:
                type: number
              LineCode:
                $ref: "#/components/schemas/LineCode"
              SecondsAtLocation:
                type: number
              ServiceType:
                type: string
                enum:
                  - "NoPassengers"
                  - "Normal"
                  - "Special"
                  - "Unknown"
              TrainId:
                type: string
              TrainNumber:
                type: string
    StandardRoutesObject:
      type: object
      properties:
        StandardRoutes:
          type: array
          items:
            type: object
            properties:
              LineCode:
                $ref: "#/components/schemas/LineCode"
              TrackNum:
                type: number
                enum:
                  - 1
                  - 2
              TrackCircuits:
                type: array
                items:
                  type: object
                  properties:
                    CircuitId:
                      type: number
                    SeqNum:
                      type: number
                    StationCode:
                      $ref: "#/components/schemas/StationCode"
    TrackCircuitsObject:
      type: object
      properties:
        TrackCircuits:
          type: array
          items:
            type: object
            properties:
              CircuitId:
                type: integer
              Neighbors:
                type: object
                properties:
                  CircuitIds:
                    type: array
                    items:
                      type: integer
                  NeighborType:
                    type: string
                    enum:
                      - Right
                      - Left
              Track:
                type: integer
    LinesObject:
      type: object
      properties:
        Lines:
          type: array
          items:
            type: object
            properties:
              DisplayName:
                type: string
              EndStationCode:
                $ref: "#/components/schemas/StationCode"
              InternalDestination1:
                $ref: "#/components/schemas/StationCode"
              InternalDestination2:
                $ref: "#/components/schemas/StationCode"
              LineCode:
                $ref: "#/components/schemas/LineCode"
              StartStationCode:
                $ref: "#/components/schemas/StationCode"
    StationsParkingObject:
      type: object
      properties:
        StationsParking:
          type: array
          items:
            type: object
            properties:
              Code:
                $ref: "#/components/schemas/StationCode"
              Notes:
                type: string
                nullable: true
              AllDayParking:
                type: object
                properties:
                  TotalCount:
                    type: integer
                  RiderCost:
                    type: number
                    format: double
                  NonRiderCost:
                    type: number
                    format: double
              ShortTermParking:
                type: object
                properties:
                  TotalCount:
                    type: integer
                  SaturdayRiderCost:
                    type: number
                    format: double
                  SaturdayNonRiderCost:
                    type: number
                    format: double
                  Notes:
                    type: string
              InternalDestination2:
                $ref: "#/components/schemas/StationCode"
              LineCode:
                $ref: "#/components/schemas/LineCode"
              StartStationCode:
                $ref: "#/components/schemas/StationCode"
    StationPathsObject:
      type: object
      properties:
        Path:
          type: array
          items:
            type: object
            properties:
              DistanceToPrev:
                type: integer
              LineCode:
                $ref: "#/components/schemas/LineCode"
              SeqNum:
                type: integer
              StationCode:
                $ref: "#/components/schemas/StationCode"
              StationName:
                type: string
    StationEntrancesObject:
      type: object
      properties:
        Entrances:
          type: array
          items:
            type: object
            properties:
              Description:
                type: string
              Lat:
                type: number
                format: double
              Lon:
                type: number
                format: double
              Name:
                type: string
              StationCode1:
                $ref: '#/components/schemas/StationCode'
              StationCode2:
                $ref: '#/components/schemas/StationCode'
    StationInformationObject:
      type: object
      properties:
        Address:
          type: object
          properties:
            City:
              type: string
            State:
              type: string
            Street:
              type: string
            Zip:
              type: string
        Code:
          $ref: '#/components/schemas/StationCode'
        Lat:
          type: number
          format: double
        Lon:
          type: number
          format: double
        LineCode1:
          $ref: '#/components/schemas/LineCode'
        LineCode2:
          $ref: '#/components/schemas/LineCode'
        LineCode3:
          $ref: '#/components/schemas/LineCode'
        LineCode4:
          $ref: '#/components/schemas/LineCode'
        Name:
          type: string
        StationTogether1:
          $ref: '#/components/schemas/StationCode'
        StationTogether2:
          $ref: '#/components/schemas/StationCode'
    StationListObject:
      type: object
      properties:
        Stations:
          type: array
          items:
            $ref: '#/components/schemas/StationInformationObject'
    TrainTime:
      type: object
      properties:
        Time:
          type: string
        DestinationStationCode:
          $ref: '#/components/schemas/StationCode'
    NDayTimeObject:
      type: object
      properties:
        OperatingTime:
          type: string
        FirstTrains:
          type: array
          items:
            $ref: '#/components/schemas/TrainTime'
        LastTrains:
          type: array
          items:
            $ref: '#/components/schemas/TrainTime'
    StationTimingObject:
      type: object
      properties:
        StationTimes:
          type: array
          items:
            type: object
            properties:
              Code:
                $ref: '#/components/schemas/StationCode'
              StationName:
                type: string
              Monday:
                $ref: '#/components/schemas/NDayTimeObject'
              Tuesday:
                $ref: '#/components/schemas/NDayTimeObject'
              Wednesday:
                $ref: '#/components/schemas/NDayTimeObject'
              Thursday:
                $ref: '#/components/schemas/NDayTimeObject'
              Friday:
                $ref: '#/components/schemas/NDayTimeObject'
              Saturday:
                $ref: '#/components/schemas/NDayTimeObject'
              Sunday:
                $ref: '#/components/schemas/NDayTimeObject'
    StationToStationObject:
      type: object
      properties:
        StationToStationInfos:
          type: array
          items:
            type: object
            properties:
              CompositeMiles:
                type: number
                format: float
              DestinationStation:
                $ref: '#/components/schemas/StationCode'
              RailFare:
                type: object
                properties:
                  OffPeakTime:
                    type: number
                    format: float
                  PeakTime:
                    type: number
                    format: float
                  SeniorDisabled:
                    type: number
                    format: float
              RailTime:
                type: integer
                format: float
              SourceStation:
                $ref: '#/components/schemas/StationCode'
  parameters:
    ContentType:
      in: query
      name: contentType
      schema:
        type: string
        enum:
          - "json"
      required: true
      description: Returns response in the specified format. Currently supported formats include json and xml.
  securitySchemes:
    apiKey:
      type: apiKey
      name: api_key
      in: header
security:
  - apiKey: []
paths:
  /StationPrediction.svc/json/GetPrediction/{StationCodes}:
    description: >-
      Real-time rail prediction methods JSON - Next Trains.
      Returns next train arrival information for one or more stations. Will return an empty set of results when no predictions are available. Use All for the StationCodes parameter to return predictions for all stations.
      For terminal stations (e.g.: Greenbelt, Shady Grove, etc.), predictions may be displayed twice.
      Some stations have two platforms (e.g.: Gallery Place, Fort Totten, L'Enfant Plaza, and Metro Center). To retrieve complete predictions for these stations, be sure to pass in both StationCodes.
      For trains with no passengers, the DestinationName will be No Passenger.
      Next train arrival information is refreshed once every 20 to 30 seconds approximately.
    get:
      tags:
        - "Stations"
      parameters:
        - in: path
          name: StationCodes
          schema:
            type: string
          required: true
          description: Comma-separated list of station codes. For all predictions, use "All".

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextTrains'
            application/json; charset:utf-8:
              schema:
                $ref: '#/components/schemas/NextTrains'

  /TrainPositions/TrainPositions:
    description: >-
      Real-time train positions and support methods.
      Returns uniquely identifiable trains in service and what track circuits they currently occupy. Will return an empty set of results when no positions are available.
      Data is refreshed once every 7-10 seconds.
      Please refer to [this page](https://developer.wmata.com/TrainPositionsFAQ) for additional details.
    get:
      tags:
        - "Trains"
      parameters:
        - $ref: "#/components/parameters/ContentType"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveTrainPositions'
            application/json; charset:utf-8:
              schema:
                $ref: '#/components/schemas/LiveTrainPositions'

  /TrainPositions/StandardRoutes:
    description: >-
      Real-time train positions and support methods.
      Returns an ordered list of mostly revenue (and some lead) track circuits, arranged by line and track number. This data does not change frequently and should be cached for a reasonable amount of time.
      Please refer to [this page](https://developer.wmata.com/TrainPositionsFAQ) for additional details.
    get:
      tags:
        - "Trains"
      parameters:
        - $ref: "#/components/parameters/ContentType"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardRoutesObject'
            application/json; charset:utf-8:
              schema:
                $ref: '#/components/schemas/StandardRoutesObject'

  /TrainPositions/TrackCircuits:
    description: >-
      Real-time train positions and support methods.
      Returns a list of all track circuits including those on pocket tracks and crossovers. Each track circuit may include references to its right and left neighbors.Please refer to [this page](https://developer.wmata.com/TrainPositionsFAQ) for additional details.
    get:
      tags:
        - "Trains"
      parameters:
        - $ref: "#/components/parameters/ContentType"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackCircuitsObject'
            application/json; charset:utf-8:
              schema:
                $ref: '#/components/schemas/TrackCircuitsObject'

  /Rail.svc/json/jLines:
    description: >-
      Rail line and station information, including locations, fares, times, and parking.
      Returns information about all rail lines.
    get:
      tags:
        - "Rail"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinesObject'
            application/json; charset:utf-8:
              schema:
                $ref: '#/components/schemas/LinesObject'
  /Rail.svc/json/jStationParking:
    description: >-
      Rail line and station information, including locations, Returns parking information at a station based on a given StationCode. Omit the StationCode to return parking information for all stations.

      If a station has no parking, the StationsParking element will contain no child elements.
    get:
      tags:
        - "Rail"
      parameters:
        - in: query
          name: StationCode
          schema:
            $ref: '#/components/schemas/StationCode'
          required: false
          description: Station code. Use the Station List method to return a list of all station codes..
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationsParkingObject'
            application/json; charset:utf-8:
              schema:
                $ref: '#/components/schemas/StationsParkingObject'
  /Rail.svc/json/jPath:
    description: >-
      Rail line and station information, including locations, Returns a set of ordered stations and distances between two stations on the same line.

      Note that this method is not suitable on its own as a pathfinding solution between stations.
    get:
      tags:
        - "Rail"
      parameters:
        - in: query
          name: FromStationCode
          schema:
            $ref: '#/components/schemas/StationCode'
          required: true
          description: Station code for the origin station. Use the Station List method to return a list of all station codes.
        - in: query
          name: ToStationCode
          schema:
            $ref: '#/components/schemas/StationCode'
          required: true
          description: Station code for the destination station. Use the Station List method to return a list of all station codes.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationPathsObject'
            application/json; charset:utf-8:
              schema:
                $ref: '#/components/schemas/StationPathsObject'
  /Rail.svc/json/jStationEntrances:
    description: >-
      Rail line and station information, including locations, Returns a list of nearby station entrances based on latitude, longitude, and radius (meters). Omit search parameters to return all station entrances.
    get:
      tags:
        - "Rail"
      parameters:
        - in: query
          name: Lat
          schema:
            type: number
            format: double
          required: false
          description: Center point Latitude, required if Longitude and Radius are specified.
        - in: query
          name: Lon
          schema:
            type: number
            format: double
          required: false
          description: Center point Longitude, required if Longitude and Radius are specified.
        - in: query
          name: Radius
          schema:
            type: number
            format: double
          required: false
          description: Radius (meters) to include in the search area, required if Latitude and Longitude are specified.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationEntrancesObject'
            application/json; charset:utf-8:
              schema:
                $ref: '#/components/schemas/StationEntrancesObject'
  /Rail.svc/json/jStationInfo:
    description: >-
      Returns station location and address information based on a given StationCode.
    get:
      tags:
        - "Rail"
      parameters:
        - in: query
          name: StationCode
          schema:
            $ref: '#/components/schemas/StationCode'
          required: true
          description: Station code. Use the Station List method to return a list of all station codes.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationInformationObject'
            application/json; charset:utf-8:
              schema:
                $ref: '#/components/schemas/StationInformationObject'
  /Rail.svc/json/jStations:
    description: >-
      Returns a list of station location and address information based on a given LineCode. Omit the LineCode to return all stations. The response is an array of objects identical to those returned in the Station Information method.
    get:
      tags:
        - "Rail"
      parameters:
        - in: query
          name: LineCode
          schema:
            $ref: '#/components/schemas/LineCode'
          required: false
          description: Two-letter line code abbreviation.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationListObject'
            application/json; charset:utf-8:
              schema:
                $ref: '#/components/schemas/StationListObject'
  /Rail.svc/json/jStationTimes:
    description: >-
      Returns opening and scheduled first/last train times based on a given StationCode. Omit the StationCode to return timing information for all stations.

      Note that for stations with multiple platforms (e.g.: Metro Center, L'Enfant Plaza, etc.), a distinct call is required for each StationCode to retrieve the full set of train times at such stations.
    get:
      tags:
        - "Rail"
      parameters:
        - in: query
          name: StationCode
          schema:
            $ref: '#/components/schemas/StationCode'
          required: false
          description: Station code. Use the Station List method to return a list of all station codes.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationTimingObject'
            application/json; charset:utf-8:
              schema:
                $ref: '#/components/schemas/StationTimingObject'
  /Rail.svc/json/jSrcStationToDstStationInfo:
    description: >-
      Returns a distance, fare information, and estimated travel time between any two stations, including those on different lines. Omit both parameters to retrieve data for all stations.
    get:
      tags:
        - "Rail"
      parameters:
        - in: query
          name: FromStationCode
          schema:
            $ref: '#/components/schemas/StationCode'
          required: false
          description: Station code for the origin station. Use the Station List method to return a list of all station codes.
        - in: query
          name: ToStationCode
          schema:
            $ref: '#/components/schemas/StationCode'
          required: false
          description: Station code for the destination station. Use the Station List method to return a list of all station codes.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationToStationObject'
            application/json; charset:utf-8:
              schema:
                $ref: '#/components/schemas/StationToStationObject'